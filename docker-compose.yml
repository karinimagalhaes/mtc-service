version: '3.8'

services:
  kafka: 
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: "Payments"
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_ZOOKEEPER_CONNECT: 'zooKeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zooKeeper
    image: 'confluentinc/cp-kafka:latest'
    ports:
      - '9092:9092'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  zooKeeper:
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'
    image: 'confluentinc/cp-zookeeper:latest'
    ports:
      - '2181:2181'

  schemaRegistry:
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zooKeeper:2181
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:29092'
    image: 'confluentinc/cp-schema-registry:latest'
    ports:
      - '8081:8081'

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zooKeeper:2181
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: schemaregistry:8081
    
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
      SCHEMAREGISTRY_CONNECT: "schemaregistry:8081"
    depends_on:
      - "kafka"